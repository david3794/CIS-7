#include <iostream>
#include <time.h> 
using namespace std;


// initializing variable

int number1;
int number2;
int recursion (int,int);
int gcd;
int REC;
double times;


int main ()

{
	cout << "Please enter a number: ";
	cin >> number1;
	
	 if (cin.fail ())
    {
	cout << "ERROR -- You did not enter a number. \n";
	return 0;
	}
	
	cout << "Please enter a second number: ";
	cin >> number2;
	
	 	if (cin.fail ())
    	{
		  cout << "ERROR -- You did not enter a number. \n";
		  return 0;
		}	
		
		// LOOKED UP THE ACTUAL FUNCTIONS, PREVIOUS FUNCTIONS WERE PLACE HOLDERS TO TRY TO TEST TIME
clock_t begin;
    begin = clock();
    
    for(int i = 1; i <= number1 && i <= number2; i++)
    {
        if(number1 % i == 0 && number2 % i == 0 )
        {
            gcd=i;
        }
    }
	
 // HAD TO LOOK UP HOW TO CORREC THE TIMING CAUSE I COULDN'T FIX THE NEGATIVE MS VALUES.
 
 
    times = ((clock() - begin) / (double) CLOCKS_PER_SEC) * 1000000;
    
    cout<<"GCD of " << number1 << " and " << number2 << " is "<< gcd << "." << endl;
    cout << "It took iteration " << (double)times << " ms." << endl;
    
    begin = clock();
    int REC = recursion(number1, number2);
    times = ((clock() - begin) / (double) CLOCKS_PER_SEC) * 1000000;
    
    cout << "Euclidean method took " << (double)times << " ms." << endl;

    return 0;
}

// RECURSIVE OR EUCLIDIAN
int recursion(int a, int b)
{
    if (b != 0)
    {
       return recursion(b, a % b);
    }
    else 
    {
       return a;
    }
}		
