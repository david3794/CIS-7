/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/
// vector <string>  x
// push front , push back, push on  , print out stack 
//x.begin() <- end ();
#include <iostream>
#include <vector>

using namespace std;


//declare variables

char o;
int number1;
int number2;
int answer1;
int answer2;
int factorial(int, vector <int> &);
int fibonacci(int, vector <int> &);


int main ()
{
 
  
  vector <int> stack;
  
   //label for jump
  
perraso:

  cout << "Please enter 1 for factorial program or 2 for Fibonacci program: ";

  // select case
  cin >> o;

  // clear screen in order to initiate programs
  cout << "\033[2J\033[1;1H";

  switch (o)

    {
    case '1':
    
      cout << "Please enter a positive integer: ";
      cin >> number1;
      answer1 = factorial(number1, stack);
      cout << "Factorial of " << number1 << " = " << answer1 << endl;
      
      break;

    case '2':
      cout << "Please enter a number which will represent n: ";
      
      cin >> number2;
      answer2 = factorial(number2, stack);
      cout << "The sum of the " << number2<< " factor is " <<answer2 ;
       
      break;

      // wrong choice 
    default:
      cout << "Error! Please enter a valid choice. \n";
      
      //jump up
      goto perraso;

      break;

    }

return 0;
}

//factorial function
int factorial (int number1, vector <int> & stack)

{
    stack.push_back(number1);
    
    for (int i = 0; i  < stack.size(); i++)
    {
        cout << stack[i] << " ";
    }
    
    cout << endl << endl;
    
    if (number1 == 0 || number1 == 1)
    {
        stack.pop_back();
        
        for (int i = 0; i < stack.size(); i++)
        {
            cout << stack[i] << " ";
        }
        
        cout << endl << endl;
        
        return 1;
} 

// fibonacci function

int fibonacci(int number2, vector <int> & stack)
{
    if (number2 == 0)
    {
        return 0;
    }
    
    if (number2 == 1 || number2 == 2)
    {
        return 1;
    }
    
    return fibonacci(number2 - 1, stack) + fibonacci(number2 - 2, stack);
} 



